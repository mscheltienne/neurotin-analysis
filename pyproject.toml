[build-system]
requires = ['setuptools >= 61.0.0']
build-backend = 'setuptools.build_meta'

[project]
name = 'neurotin'
version = '0.1.0'
description = 'NeuroTin analysis scripts.'
readme = 'README.md'
license = {file = 'LICENSE'}
requires-python = '>=3.8'
authors = [
    {name = 'Mathieu Scheltienne', email = 'mathieu.scheltienne@epfl.ch'},
]
maintainers = [
    {name = 'Mathieu Scheltienne', email = 'mathieu.scheltienne@epfl.ch'},
]
keywords = [
    'python',
    'neuroscience',
    'neurofeedback',
    'tinnitus',
]
classifiers = [
    'Operating System :: Microsoft :: Windows',
    'Operating System :: Unix',
    'Operating System :: MacOS',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Natural Language :: English',
    'License :: OSI Approved :: MIT License',
    'Intended Audience :: Science/Research',
    'Intended Audience :: Developers',
]
dependencies = [
    'numpy>=1.21',
    'scipy',
    'mne==1.2.3',
    'pandas',
    'matplotlib',
    'seaborn',
    'autoreject',
    'python-picard',
    'pyprep>=0.4.0',
    'mne-icalabel>=0.4',
]

[project.optional-dependencies]
build = [
    'build',
    'twine',
]
style = [
    'black',
    'codespell',
    'isort',
    'flake8',
    'pydocstyle[toml]',
]
test = [
    'pytest',
    'pytest-cov',
]
all = [
    'neurotin[style]',
    'neurotin[test]',
    'neurotin[build]',
]

[project.urls]
homepage = 'https://github.com/mscheltienne/neurotin-analysis'
documentation = 'https://github.com/mscheltienne/neurotin-analysis'
source = 'https://github.com/mscheltienne/neurotin-analysis'
tracker = 'https://github.com/mscheltienne/neurotin-analysis/issues'

[project.scripts]
neurotin = 'neurotin.commands.main:run'
neurotin_preprocess = 'neurotin.commands.neurotin_preprocess:run'
neurotin_band_power_onrun = 'neurotin.commands.neurotin_band_power_onrun:run'
neurotin_model_avg = 'neurotin.commands.neurotin_model_avg:run'

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
include = ['neurotin*']
exclude = ['neurotin*tests']

[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
      __pycache__
    | \.github
    | setup.py
)
'''

[tool.isort]
profile = 'black'
multi_line_output = 3
line_length = 79
py_version = 38
extend_skip_glob = [
    'setup.py',
]

[tool.pydocstyle]
convention = 'numpy'
ignore-decorators = '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^neurotin.*'
add_ignore = 'D100,D104,D107'

[tool.pytest.ini_options]
minversion = '6.0'
addopts = '--durations 20 --junit-xml=junit-results.xml --verbose'
filterwarnings = []

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
    '**/__init__.py',
    '**/neurotin/_version.py',
    '**/neurotin/commands/*',
    '**/tests/**',
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'if __name__ == .__main__.:',
]
precision = 2
